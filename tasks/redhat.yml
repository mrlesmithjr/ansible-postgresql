---
- name: redhat | Adding EPEL Release
  package:
    name: epel-release
    state: present
  become: true
  register: result
  until: result is successful

- name: redhat | Installing Pre-Reqs
  package:
    name: "{{ postgresql_redhat_pre_reqs }}"
    state: present
  become: true
  register: result
  until: result is successful

- name: redhat | Installing Development Tools
  package:
    name: "@Development tools"
    state: present
  become: true
  register: result
  until: result is successful

- name: redhat | Adding Postgresql Repo
  package:
    disable_gpg_check: true
    name: https://download.postgresql.org/pub/repos/yum/reporpms/EL-{{ ansible_facts.distribution_major_version }}-{{ ansible_facts.machine }}/pgdg-redhat-repo-latest.noarch.rpm
    state: present
  become: true
  register: _pg_repo_added
  until: _pg_repo_added is successful

- name: redhat | Disable the built-in PostgreSQL module # noqa no-handler
  command: dnf -qy module disable postgresql
  become: true
  when:
    - _pg_repo_added is changed
    - ansible_facts.distribution_major_version is version('8', '>=')

- name: redhat | Installing Postgresql
  package:
    name:
      - "postgresql{{ _postgresql_version }}"
      - "postgresql{{ _postgresql_version }}-server"
      - "postgresql{{ _postgresql_version }}-contrib"
    state: present
  become: true
  register: result
  until: result is successful

- name: redhat | Checking If DB Has Been Initialized
  stat:
    path: "{{ _postgresql_init_log }}"
  register: _pg_db_init_check

- name: redhat | Initializing DB
  command: "{{ _postgresql_init_db }}"
  become: true
  when: not _pg_db_init_check['stat']['exists']

- name: redhat | Ensuring Postgresql Service Is Enabled and Started
  service:
    name: "{{ postgresql_service }}"
    state: started
    enabled: true
  become: true
